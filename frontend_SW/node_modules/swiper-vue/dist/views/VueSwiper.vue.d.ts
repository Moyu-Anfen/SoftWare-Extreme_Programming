declare const _default: {
    props: {
        direction: {
            type: StringConstructor;
            default: string;
        };
        autoplay: {
            type: BooleanConstructor;
            default: boolean;
        };
        delay: {
            type: NumberConstructor;
            default: number;
        };
        height: {
            type: NumberConstructor;
            default: number;
        };
        width: {
            type: NumberConstructor;
            default: any;
        };
        items: {
            type: ArrayConstructor;
            default: () => any[];
        };
        arrow: {
            type: StringConstructor;
            default: string;
        };
        indicator: {
            type: BooleanConstructor;
            default: boolean;
        };
        triggerMove: {
            type: NumberConstructor;
            default: any;
        };
        mouseSlider: {
            type: BooleanConstructor;
            default: boolean;
        };
        mouseScroll: {
            type: BooleanConstructor;
            default: boolean;
        };
        hoverStop: {
            type: BooleanConstructor;
            default: boolean;
        };
    };
    data(): {
        timer: any;
        scrollTimer: any;
        currentIndex: number;
        containerWidth: number;
        containerHeight: number;
        indicatorWidth: string;
        isMouseDown: boolean;
        moveDistance: number;
    };
    computed: {
        showIndicator(): boolean;
        containerStyle(): {
            height: string;
            width: string;
        };
        cloneData(): any;
        dataLength(): any;
        getIndicatorStyle(): {
            height: any;
            width?: undefined;
        } | {
            width: any;
            height?: undefined;
        };
    };
    methods: {
        onHoverStartTimer(): void;
        moveTo(index: number): void;
        onMousedown(): void;
        onMousemove(e: MouseEvent): void;
        scrollMove(type: "pre" | "next"): void;
        onMousewheel(e: {
            wheelDelta?: number;
            detail?: number;
            preventDefault?: Function;
        }): void;
        onChange(direction: string, index: number): void;
        onIndicator(index: number): void;
        preArrow(): void;
        handlePreArrow(): void;
        nextArrow(): void;
        handleNextArrow(e: MouseEvent): void;
        onAutoPlay(): void;
        init(): void;
        onMouseleave(): void;
        clearTimer(): void;
        onStopSwiper(): void;
        setIndicatorWidth(): void;
        onMouseup(): void;
    };
    mounted(): void;
    beforeUnmount(): void;
};
export default _default;
